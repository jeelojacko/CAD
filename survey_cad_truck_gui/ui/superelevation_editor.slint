export struct SuperelevationRow {
    station: string,
    left: string,
    right: string,
}

import { Button, VerticalBox, HorizontalBox, LineEdit, ListView } from "std-widgets.slint";

export component SuperelevationEditor inherits Window {
    in-out property <[SuperelevationRow]> rows_model;
    in-out property <int> selected_index;
    callback add_row();
    callback remove_row(int);
    callback edit_station(int, string);
    callback edit_left(int, string);
    callback edit_right(int, string);
    title: "Superelevation Editor";
    width: 400px;
    height: 300px;

    VerticalBox {
        spacing: 4px;
        Rectangle {
            width: 100%;
            height: 20px;
            border-width: 1px;
            border-color: #808080;
            HorizontalBox {
                spacing: 8px;
                Text { color: #FFFFFF; text: "Station"; width: 120px; }
                Text { color: #FFFFFF; text: "Left"; width: 80px; }
                Text { color: #FFFFFF; text: "Right"; width: 80px; }
            }
        }
        ListView {
            vertical-stretch: 1;
            for row[i] in root.rows_model : Rectangle {
                property <bool> selected: root.selected_index == i;
                background: selected ? #404040 : transparent;
                height: 24px;
                HorizontalBox {
                    spacing: 8px;
                    LineEdit { text: row.station; width: 120px; edited(text) => { root.edit_station(i, text); } }
                    LineEdit { text: row.left; width: 80px; edited(text) => { root.edit_left(i, text); } }
                    LineEdit { text: row.right; width: 80px; edited(text) => { root.edit_right(i, text); } }
                }
                TouchArea { width: 100%; height: 100%; clicked => { root.selected_index = i; } }
            }
        }
        HorizontalBox {
            spacing: 6px;
            Button { text: "Add"; clicked => { root.add_row(); } }
            Button { text: "Remove"; clicked => { root.remove_row(root.selected_index); } }
        }
    }
}
